(require-module "elatin")

(define uim-pref-suppress-dot-uim-warning-dialog? #t)

(define-macro (elatin-define-rules-manually name . rules)
  `(define ,name
     (map (lambda (elt)
            (list (list (car elt)) (cadr elt)))
          ',rules)))

(elatin-define-rules-manually
 elatin-rules-muflax-latin
 (("middle-dot"	"a")	("ä"))
 (("middle-dot"	"A")	("Ä"))
 (("middle-dot"	"o")	("ö"))
 (("middle-dot"	"O")	("Ö"))
 (("middle-dot"	"u")	("ü"))
 (("middle-dot"	"U")	("Ü"))

 ;; conlangs
 (("middle-dot"	"d")	("ð"))
 (("middle-dot"	"D")	("Ð"))
 (("middle-dot"	"l")	("ł"))
 (("middle-dot"	"L")	("Ł"))
 (("middle-dot"	"n")	("ŋ"))
 (("middle-dot"	"N")	("Ŋ"))
 (("middle-dot"	"r")	("ř"))
 (("middle-dot"	"R")	("Ř"))
 (("middle-dot"	"s")	("š"))
 (("middle-dot"	"S")	("Š"))
 (("middle-dot"	"t")	("θ"))
 (("middle-dot"	"T")	("Θ"))
 (("middle-dot"	"z")	("ž"))
 (("middle-dot"	"Z")	("Ž"))

 ;; borrowings in German
 (("middle-dot"	"e")	("é"))
 (("middle-dot"	"E")	("É"))

 ;; better quotes
 (("middle-dot"	"<")	("«"))
 (("middle-dot"	">")	("»"))

 ;; make the · typable by itself
 (("middle-dot"	"middle-dot")	("·"))
 (("middle-dot"	" ")         	("·"))
)

(define elatin-rules 'elatin-rules-muflax-latin)

;; Local Variables:
;; mode: scheme
;; coding: utf-8
;; End:
